<launch>
  <arg name="world_file"  value="$(find exercise3)/worlds/rins_task2_2.world"/>

  <arg name="base"      value="kobuki"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="hexagons"/>  <!-- circles, hexagons -->
  <!-- <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/> -->  <!-- kinect, asus_xtion_pro -->
  <arg name="3d_sensor" value="kinect"/>  <!-- kinect, asus_xtion_pro -->  <!-- EXERCISE 7 -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- ex7 new args-->
    <arg name="paused" value="false" />
    <arg name="verbose" value="true" />

    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <!-- exercise 7 -->
  <include file="$(find turtlebot_arm_control)/launch/turtlebot_arm_control.launch"/>

  <include file="$(find exercise7)/launch/includes/$(arg base).arm.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <!-- 
  <include file="$(find exercise3)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include> 
  -->

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
  
  <!-- Map server -->
  <arg name="map_file" default="$(find exercise3)/maps/pogchomp.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Localization -->
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- Move base -->
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_rviz_launchers)/rviz/navigation.rviz"/>

  <!-- Map parameters config -->
  <rosparam file="$(find exercise3)/config/params.yaml"/>

</launch>